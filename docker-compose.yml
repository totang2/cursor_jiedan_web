version: '3.3'

services:
  app:
    build:
      context: .
      args:
        - DATABASE_URL=${DATABASE_URL}
        - ALIPAY_APP_ID=${ALIPAY_APP_ID:-test_app_id}
        - ALIPAY_PRIVATE_KEY=${ALIPAY_PRIVATE_KEY:-test_private_key}
        - ALIPAY_PUBLIC_KEY=${ALIPAY_PUBLIC_KEY:-test_public_key}
        - ALIPAY_ENCRYPT_KEY=${ALIPAY_ENCRYPT_KEY:-test_encrypt_key}
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=production
      - ALIPAY_APP_ID=${ALIPAY_APP_ID:-test_app_id}
      - ALIPAY_PRIVATE_KEY=${ALIPAY_PRIVATE_KEY:-test_private_key}
      - ALIPAY_PUBLIC_KEY=${ALIPAY_PUBLIC_KEY:-test_public_key}
      - ALIPAY_ENCRYPT_KEY=${ALIPAY_ENCRYPT_KEY:-test_encrypt_key}
      - DEBUG=*
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
    tty: true
    stdin_open: true
    entrypoint: ["/bin/sh", "-c", "tail -f /dev/null"]

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=yuan
      - POSTGRES_PASSWORD=Passvord2025
      - POSTGRES_DB=dev_marketplace
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yuan -d dev_marketplace"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: postgres -c 'max_connections=1000'

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge